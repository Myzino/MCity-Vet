!(function (a) {
    "use strict";

      /**
   * Easy selector helper function
   */
console.log('JavaScript loaded in Vite.');
  const select = (el, all = false) => {
    el = el.trim()
    if (all) {
      return [...document.querySelectorAll(el)]
    } else {
      return document.querySelector(el)
    }
  }

  /**
   * Easy event listener function
   */
  const on = (type, el, listener, all = false) => {
    if (all) {
      select(el, all).forEach(e => e.addEventListener(type, listener))
    } else {
      select(el, all).addEventListener(type, listener)
    }
  }

  /**
   * Easy on scroll event listener 
   */
  const onscroll = (el, listener) => {
    el.addEventListener('scroll', listener)
  }

  /**
   * Sidebar toggle
   */
  if (select('.toggle-sidebar-btn')) {
    on('click', '.toggle-sidebar-btn', function(e) {
      select('<>').classList.toggle('toggle-sidebar')
    })
  }

  /**
   * Search bar toggle
   */
  if (select('.search-bar-toggle')) {
    on('click', '.search-bar-toggle', function(e) {
      select('.search-bar').classList.toggle('search-bar-show')
    })
  }

  /**
   * Navbar links active state on scroll
   */
  let navbarlinks = select('#navbar .scrollto', true)
  const navbarlinksActive = () => {
    let position = window.scrollY + 200
    navbarlinks.forEach(navbarlink => {
      if (!navbarlink.hash) return
      let section = select(navbarlink.hash)
      if (!section) return
      if (position >= section.offsetTop && position <= (section.offsetTop + section.offsetHeight)) {
        navbarlink.classList.add('active')
      } else {
        navbarlink.classList.remove('active')
      }
    })
  }
  window.addEventListener('load', navbarlinksActive)
  onscroll(document, navbarlinksActive)

  /**
   * Toggle .header-scrolled class to #header when page is scrolled
   */
  let selectHeader = select('#header')
  if (selectHeader) {
    const headerScrolled = () => {
      if (window.scrollY > 100) {
        selectHeader.classList.add('header-scrolled')
      } else {
        selectHeader.classList.remove('header-scrolled')
      }
    }
    window.addEventListener('load', headerScrolled)
    onscroll(document, headerScrolled)
  }

  /**
   * Back to top button
   */
  let backtotop = select('.back-to-top')
  if (backtotop) {
    const toggleBacktotop = () => {
      if (window.scrollY > 100) {
        backtotop.classList.add('active')
      } else {
        backtotop.classList.remove('active')
      }
    }
    window.addEventListener('load', toggleBacktotop)
    onscroll(document, toggleBacktotop)
  }

  /**
   * Initiate tooltips
   */
  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
  var tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
    return new bootstrap.Tooltip(tooltipTriggerEl)
  })

  /**
   * Initiate quill editors
   */
  if (select('.quill-editor-default')) {
    new Quill('.quill-editor-default', {
      theme: 'snow'
    });
  }

  if (select('.quill-editor-bubble')) {
    new Quill('.quill-editor-bubble', {
      theme: 'bubble'
    });
  }

  if (select('.quill-editor-full')) {
    new Quill(".quill-editor-full", {
      modules: {
        toolbar: [
          [{
            font: []
          }, {
            size: []
          }],
          ["bold", "italic", "underline", "strike"],
          [{
              color: []
            },
            {
              background: []
            }
          ],
          [{
              script: "super"
            },
            {
              script: "sub"
            }
          ],
          [{
              list: "ordered"
            },
            {
              list: "bullet"
            },
            {
              indent: "-1"
            },
            {
              indent: "+1"
            }
          ],
          ["direction", {
            align: []
          }],
          ["link", "image", "video"],
          ["clean"]
        ]
      },
      theme: "snow"
    });
  }

  /**
   * Initiate TinyMCE Editor
   */
  const useDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;
  const isSmallScreen = window.matchMedia('(max-width: 1023.5px)').matches;

  tinymce.init({
    selector: 'textarea.tinymce-editor',
    plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
    editimage_cors_hosts: ['picsum.photos'],
    menubar: 'file edit view insert format tools table help',
    toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
    toolbar_sticky: true,
    toolbar_sticky_offset: isSmallScreen ? 102 : 108,
    autosave_ask_before_unload: true,
    autosave_interval: '30s',
    autosave_prefix: '{path}{query}-{id}-',
    autosave_restore_when_empty: false,
    autosave_retention: '2m',
    image_advtab: true,
    link_list: [{
        title: 'My page 1',
        value: 'https://www.tiny.cloud'
      },
      {
        title: 'My page 2',
        value: 'http://www.moxiecode.com'
      }
    ],
    image_list: [{
        title: 'My page 1',
        value: 'https://www.tiny.cloud'
      },
      {
        title: 'My page 2',
        value: 'http://www.moxiecode.com'
      }
    ],
    image_class_list: [{
        title: 'None',
        value: ''
      },
      {
        title: 'Some class',
        value: 'class-name'
      }
    ],
    importcss_append: true,
    file_picker_callback: (callback, value, meta) => {
      /* Provide file and text for the link dialog */
      if (meta.filetype === 'file') {
        callback('https://www.google.com/logos/google.jpg', {
          text: 'My text'
        });
      }

      /* Provide image and alt text for the image dialog */
      if (meta.filetype === 'image') {
        callback('https://www.google.com/logos/google.jpg', {
          alt: 'My alt text'
        });
      }

      /* Provide alternative source and posted for the media dialog */
      if (meta.filetype === 'media') {
        callback('movie.mp4', {
          source2: 'alt.ogg',
          poster: 'https://www.google.com/logos/google.jpg'
        });
      }
    },
    templates: [{
        title: 'New Table',
        description: 'creates a new table',
        content: '<div class="mceTmpl"><table width="98%%"  border="0" cellspacing="0" cellpadding="0"><tr><th scope="col"> </th><th scope="col"> </th></tr><tr><td> </td><td> </td></tr></table></div>'
      },
      {
        title: 'Starting my story',
        description: 'A cure for writers block',
        content: 'Once upon a time...'
      },
      {
        title: 'New list with dates',
        description: 'New List with dates',
        content: '<div class="mceTmpl"><span class="cdate">cdate</span><br><span class="mdate">mdate</span><h2>My List</h2><ul><li></li><li></li></ul></div>'
      }
    ],
    template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',
    template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]',
    height: 600,
    image_caption: true,
    quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
    noneditable_class: 'mceNonEditable',
    toolbar_mode: 'sliding',
    contextmenu: 'link image table',
    skin: useDarkMode ? 'oxide-dark' : 'oxide',
    content_css: useDarkMode ? 'dark' : 'default',
    content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px }'
  });

  /**
   * Initiate Bootstrap validation check
   */
  var needsValidation = document.querySelectorAll('.needs-validation')

  Array.prototype.slice.call(needsValidation)
    .forEach(function(form) {
      form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
          event.preventDefault()
          event.stopPropagation()
        }

        form.classList.add('was-validated')
      }, false)
    })

  /**
   * Initiate Datatables
   */
  const datatables = select('.datatable', true)
  datatables.forEach(datatable => {
    new simpleDatatables.DataTable(datatable);
  })

  /**
   * Autoresize echart charts
   */
  const mainContainer = select('#main');
  if (mainContainer) {
    setTimeout(() => {
      new ResizeObserver(function() {
        select('.echart', true).forEach(getEchart => {
          echarts.getInstanceByDom(getEchart).resize();
        })
      }).observe(mainContainer);
    }, 200);
  }

    var t = {
        initialised: !1,
        mobile: !1,
        init: function () {
            this.initialised ||
                ((this.initialised = !0),
                    this.stickyHeader(),
                    this.mobileMenu(),
                    this.searchToggle(),
                    this.selectToggle(),
                    this.datePicker(),
                    this.tabBorder(),
                    this.cardToggle(),
                    this.appointToggle(),
                    this.accordionBorder(),
                    a.fn.superfish && this.menuInit(),
                    a.fn.owlCarousel && this.owlCarousels(),
                    a.fn.isotope && this.isotope());
        },
        scrollToTop: function () {
            var t = a("#scroll-top");
            a(window).on("load scroll", function () {
                a(window).scrollTop() >= 400 ? t.addClass("show") : t.removeClass("show");
            }),
                t.on("click", function (t) {
                    a("html, body").animate({ scrollTop: 0 }, 800), t.preventDefault();
                });
        },
        menuInit: function () {
            a(".menu, .menu-vertical").superfish({ popUpSelector: "ul, .megamenu", hoverClass: "show", delay: 0, speed: 80, speedOut: 80, autoArrows: !0 });
        },
        viewAllDemos: function () {
            var t = a(".view-all-demos");
            t.on("click", function (t) {
                t.preventDefault(), a(".demo-item.hidden").addClass("show"), a(this).addClass("disabled-hidden");
            });
            a(".megamenu-container .sf-with-ul").hover(function () {
                a(".demo-item.show").addClass("hidden"), a(".demo-item.show").removeClass("show"), t.removeClass("disabled-hidden");
            });
        },
        stickyHeader: function () {
            if (a(".sticky-header").length && a(window).width() >= 992) new Waypoint.Sticky({ element: a(".sticky-header")[0], stuckClass: "fixed", offset: -300 });
        },
        searchToggle: function () {
            var t = a(".header-search-wrapper"),
                i = a("body"),
                e = a(".search-toggle");
            e.on("click", function (i) {
                t.toggleClass("show"), a(this).toggleClass("active"), t.find("input").focus(), i.preventDefault();
            }),
                i.on("click", function (a) {
                    e.hasClass("active") && (t.removeClass("show"), e.removeClass("active"), i.removeClass("is-search-active"));
                }),
                a(".header-search").on("click", function (a) {
                    a.stopPropagation();
                });
        },
        mobileMenu: function () {
            var t = a("body");
            a(".mobile-menu-toggler").on("click", function (i) {
                t.toggleClass("mmenu-active"), a(this).toggleClass("active"), i.preventDefault();
            }),
                a(".mobile-menu-overlay, .mobile-menu-close").on("click", function (i) {
                    t.removeClass("mmenu-active"), a(".menu-toggler").removeClass("active"), i.preventDefault();
                }),
                a(".mobile-menu")
                    .find("li")
                    .each(function () {
                        var t = a(this);
                        t.find("ul").length && a("<span/>", { class: "mmenu-btn" }).appendTo(t.children("a"));
                    }),
                a(".mmenu-btn").parent().on("click", function (t) {
                    var i = a(this).closest("li"),
                        e = i.find("ul").eq(0);
                    i.hasClass("open")
                        ? e.slideUp(600, function () {
                            i.removeClass("open");
                        })
                        : e.slideDown(600, function () {
                            i.addClass("open");
                        }),
                        t.stopPropagation(),
                        t.preventDefault();
                });
        },
        selectToggle: function () {
            var t = a("body");
            a(".select-control").on("click", function (t) {
                a(".select-control").removeClass("active"), a(".option-menu").removeClass("show"), a(this).toggleClass("active"), a(this).next().toggleClass("show"), t.preventDefault();
            }),
                a(".option-list").on("click", function (t) {
                    var i = a(this).find(".option").text();
                    a(this).parent().prev().text(i), a(this).parent().prev().removeClass("active"), a(this).parent().prev().append('<i class="far fa-angle-down"></i>'), a(this).parent().removeClass("show");
                }),
                t.on("click", function (t) {
                    a(".select-control").hasClass("active") && (a(".select-control").removeClass("active"), a(".option-menu").removeClass("show"));
                }),
                a(".select-control").on("click", function (a) {
                    a.stopPropagation();
                });
        },
        datePicker: function () {

            a("#form-calendar-light").each((index, element) => {
                a(element).datepicker({
                    defaultDate: "+1d",
                    startDate: "+1d",
                    autoclose: !0,
                    orientation: a('html[dir="rtl"]').get(0) ? "bottom right" : "bottom",
                    container: ".input-calendar-light",
                    rtl: !!a('html[dir="rtl"]').get(0),
                    maxViewMode: 0
                }).on('show', (e) => {
                    a(e.currentTarget).siblings('.datepicker').find('.prev').html('<div><i class="fas fa-angle-left"></i></div>');
                    a(e.currentTarget).siblings('.datepicker').find('.next').html('<div><i class="fas fa-angle-right"></i></div>');
                });

            });

            a("#form-calendar-dark").each((index, element) => {
                a("#form-calendar-dark").datepicker({
                    defaultDate: "+1d",
                    startDate: "+1d",
                    autoclose: !0,
                    orientation: a('html[dir="rtl"]').get(0) ? "bottom right" : "bottom",
                    container: ".input-calendar-dark",
                    rtl: !!a('html[dir="rtl"]').get(0),
                    maxViewMode: 0
                }).on('show', (e) => {
                    a(e.currentTarget).siblings('.datepicker').find('.prev').html('<div><i class="fas fa-angle-left"></i></div>');
                    a(e.currentTarget).siblings('.datepicker').find('.next').html('<div><i class="fas fa-angle-right"></i></div>');
                });
            });

            a(document).scroll(function () {
                a("#form-calendar").datepicker("hide").blur();
            });

        },
        tabBorder: function () {
            a(".nav-item:first-child")
                .find(".nav-link-custom")
                .on("click", function () {
                    a(".tab-content").css("border-top-left-radius", "0"), a(".tab-content").css("border-top-right-radius", "35px");
                }),
                a(".nav-item:last-child")
                    .find(".nav-link-custom")
                    .on("click", function () {
                        a(".tab-content").css("border-top-right-radius", "0"), a(".tab-content").css("border-top-left-radius", "35px");
                    });
        },
        cardToggle: function () {
            a(".btn-toggle").on("click", function () {
                var t = a(this);
                t.prev().slideToggle("slow", function () {
                    "block" == t.prev().css("display") ? t.find("i.fa-plus-circle").replaceWith("<i class='fas fa-minus-circle'></i>") : t.find("i.fa-minus-circle").replaceWith("<i class='fas fa-plus-circle'></i>");
                }),
                    setTimeout(function () {
                        a(".grid-container").isotope("layout");
                    }, 600);
            });
        },
        appointToggle: function () {
            a(".btn-book").on("click", function () {
                var t = a(this);
                t.next().slideToggle("slow", function () {
                    "none" == t.next().css("display") ? t.find("i.fa-sort-up").replaceWith("<i class='fas fa-sort-down'></i>") : t.find("i.fa-sort-down").replaceWith("<i class='far fa-sort-up'></i>");
                });
            });
        },
        accordionBorder: function () {
            a(".accordion-link").on("click", function () {
                var t = a(this).closest(".field");
                t.siblings().removeClass("active"), t.toggleClass("active");
            });
        },
        owlCarousels: function (t, i) {
            var e = {
                items: 1,
                loop: !0,
                margin: 0,
                responsiveClass: !0,
                nav: !0,
                navText: [
                    '<i class="far fa-arrow-left"></i>',
                    '<i class="far fa-arrow-right"></i>',
                ],
                dots: !0,
                smartSpeed: 400,
                autoplay: !1,
                autoplayTimeout: 15e3,
            };
            void 0 === t && (t = a("body")),
                i && (e = a.extend({}, e, i)),
                t.find('[data-toggle="owl"]').each(function () {
                    var t = a(this),
                        i = t.data("owl-options"),
                        n = a.extend({}, e, i);
                    t.hasClass("slide-animate") ||
                        t.on("initialized.owl.carousel", function () {
                            t.find(".owl-item:not(.active)")
                                .find(".appear-animate")
                                .each(function () {
                                    a(this).removeClass("appear-animate");
                                });
                        });
                    a(this).owlCarousel(n);
                }),
                a(window).resize(function () {
                    a(".nav-out").trigger("refresh.owl.carousel");
                });
        },
        isotope: function () {
            a(".grid").imagesLoaded(function () {
                a(".grid").isotope({ itemSelector: ".grid-item", percentPosition: !0, masonry: { columnWidth: ".grid-sizer" } });
            }),
                a(".grid-filter-item.filter-clear").on("click", function () {
                    a(this).closest(".filter-form").find(".select-control").html('Other select<i class="far fa-angle-down"></i>');
                });
        },
    };
    jQuery(document).ready(function () {
        t.init();
    }),
        a(window).on("load", function () {
            a("body").addClass("loaded"), t.scrollToTop();
        });
})(jQuery);

